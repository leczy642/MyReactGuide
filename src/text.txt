useEffect(() => {
  console.log("hello");
}, [r

import React, {useState, useEffect} from "react";

function App() {
const [resourceType, setresourceType] = useState('');

useEffect(() => {
  console.log("hello");
}, [resourceType]);

  return (
    <div>
      <button onClick={() => setresourceType('Posts')}>Posts</button>
      <button onClick={() => setresourceType('Users')}>Users</button>
      <button onClick={() => setresourceType('Comments')}>Comments</button>
      <div>{resourceType}</div>
    </div>
  );
}

export default App;


useEffect(() => {
  fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)
  .then(response => response.json())
  .then(json => console.log(json))
}, [resourceType]);

the code below gave an error because I used setresouceType
useEffect(() => {
  fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)
  .then(response => response.json())
  .then(json => setresourceType(json))
  .catch(error => console.log(error))
}, [resourceType]);